// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  nickname String @unique
  password String

  categories Category[]
  budgets    Budget[]
  cycles     Cycle[]
}

model Category {
  id   String @id @default(uuid())
  slug String

  name  String
  color String

  budgets Budget[]

  userId String
  user   User   @relation(fields: userId, references: id)

  @@unique([id, userId])
  @@unique([slug, userId])
}

enum BudgetType {
  INPUT
  OUTPUT
}

model Budget {
  id String @id @default(uuid())

  title       String
  description String
  day         DateTime
  amount      Float

  type BudgetType

  categoryId String
  category   Category @relation(fields: [categoryId, userId], references: [id, userId])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cycleId String?
  cycle   Cycle?  @relation(fields: [cycleId, userId], references: [id, userId])

  userId String
  user   User   @relation(fields: userId, references: id)
}

enum CyclePeriod {
  DAY
  WEEK
  MONTH
  YEAR
}

model Cycle {
  id     String      @id @default(uuid())
  end    DateTime?
  period CyclePeriod

  budgets Budget[]

  userId String
  user   User   @relation(fields: userId, references: id)

  @@unique([id, userId])
}
